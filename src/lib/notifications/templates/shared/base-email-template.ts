import { createEmailWrapper } from './email-wrapper'

// Interface base com campos comuns entre todos os templates
export interface BaseEmailData {
  // Dados b√°sicos do solicitante
  requesterName: string
  requesterEmail: string
  requesterWhatsApp?: string
  department?: string
  sector?: string
  notes?: string
}

// Configura√ß√£o de status (gen√©rica para qualquer tipo)
export interface StatusConfig {
  title: string
  icon: string
  color: string
  backgroundColor: string
  borderColor: string
}

// Fun√ß√£o para criar se√ß√£o de contato (evita duplica√ß√£o)
function createContactSection<T extends BaseEmailData>(
  data: T,
  isNotification: boolean,
): string {
  return isNotification && data.requesterWhatsApp
    ? `
    <div style="background-color: #f8fafc; padding: 15px; border-radius: 8px; margin: 15px 0; border-left: 4px solid #3b82f6;">
      <h3 style="color: #1e40af; margin: 0 0 10px 0; font-size: 16px;">üìû Contato do Solicitante</h3>
      <p style="margin: 5px 0; color: #374151;"><strong>Email:</strong> ${data.requesterEmail}</p>
      <p style="margin: 5px 0; color: #374151;"><strong>WhatsApp:</strong> ${data.requesterWhatsApp}</p>
    </div>
  `
    : ''
}

// Fun√ß√£o para criar se√ß√£o de localiza√ß√£o (evita duplica√ß√£o)
function createLocationSection<T extends BaseEmailData>(data: T): string {
  return data.department || data.sector
    ? `
    <div style="background-color: #f0f9ff; padding: 15px; border-radius: 8px; margin: 15px 0; border-left: 4px solid #0ea5e9;">
      <h3 style="color: #0369a1; margin: 0 0 10px 0; font-size: 16px;">üìç Localiza√ß√£o</h3>
      <p style="margin: 5px 0; color: #374151;"><strong>Secretaria:</strong> ${data.department || 'N√£o informado'}</p>
      <p style="margin: 5px 0; color: #374151;"><strong>Setor:</strong> ${data.sector || 'N√£o informado'}</p>
    </div>
  `
    : ''
}

// Fun√ß√£o para criar se√ß√£o de observa√ß√µes (evita duplica√ß√£o)
function createNotesSection<T extends BaseEmailData>(
  data: T,
  isStatusUpdate = false,
): string {
  // Para manuten√ß√£o: observa√ß√µes apenas em atualiza√ß√µes de status
  // Para toner: observa√ß√µes sempre mostradas quando dispon√≠veis
  const shouldShowNotes = data.notes

  return shouldShowNotes
    ? `
    <div style="background-color: #fffbeb; padding: 15px; border-radius: 8px; margin: 15px 0; border-left: 4px solid #f59e0b;">
      <h3 style="color: #92400e; margin: 0 0 10px 0; font-size: 16px;">üìù ${isStatusUpdate ? 'Observa√ß√µes Adicionais' : 'Observa√ß√µes'}</h3>
      <p style="margin: 0; color: #374151; line-height: 1.6;">${data.notes}</p>
    </div>
  `
    : ''
}

// Template base gen√©rico - elimina toda a duplica√ß√£o
export function createBaseEmailTemplate<T extends BaseEmailData>(
  data: T,
  statusConfig: StatusConfig,
  statusMessage: string,
  specificContent: string, // Conte√∫do espec√≠fico de cada tipo (toner/maintenance)
  isNotification = false,
  isStatusUpdate = false,
): string {
  // Se√ß√µes comuns - sem prop drilling, acessa data diretamente
  const contactSection = createContactSection(data, isNotification)
  const locationSection = createLocationSection(data)
  const notesSection = createNotesSection(data, isStatusUpdate)

  const content = `
        <!-- Status Badge -->
        <div style="padding: 20px; text-align: center; background-color: ${statusConfig.backgroundColor}; border-bottom: 3px solid ${statusConfig.borderColor};">
          <div style="display: inline-block; padding: 12px 24px; background-color: white; border-radius: 25px; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
            <span style="font-size: 20px; margin-right: 8px;">${statusConfig.icon}</span>
            <span style="color: ${statusConfig.color}; font-weight: 600; font-size: 16px;">${statusConfig.title}</span>
          </div>
        </div>

        <!-- Content -->
        <div style="padding: 30px 20px;">
          ${
            !isNotification
              ? `<p style="color: #374151; line-height: 1.6; margin: 0 0 20px 0; font-size: 16px;">
            Ol√° <strong>${data.requesterName}</strong>,
          </p>`
              : ''
          }
          
          <p style="color: #374151; line-height: 1.6; margin: 0 0 20px 0; font-size: 16px;">
            ${statusMessage}
          </p>

          <!-- Conte√∫do espec√≠fico do tipo (toner/maintenance) -->
          ${specificContent}

          <!-- Se√ß√µes comuns -->
          ${contactSection}
          ${locationSection}
          ${notesSection}
        </div>
  `

  return createEmailWrapper({
    title: statusConfig.title,
    content,
  })
}
